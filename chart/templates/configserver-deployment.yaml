{{- if $.Values.configuration.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.configuration.name }}
  labels:
    app: {{ $.Values.configuration.name }}
spec:
  replicas: {{ .Values.configuration.replicaCount }}
  selector:
    matchLabels:
      app: {{ $.Values.configuration.name }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app: {{ $.Values.configuration.name }}
        {{- include "ingest.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-{{ .Values.configuration.name }}
          args:
            - "--spring.cloud.config.server.native.searchLocations=file://{{ .Values.global.volumes.config.destination }}"
            - "--spring.output.ansi.enabled=ALWAYS"
            - "--spring.profiles.active=native,open_actuator"
          env:
            - name: KEY_ALIAS
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.secrets.keystore.name }}
                  key: {{ $.Values.global.secrets.keystore.alias }}
                  optional: false
            - name: KEYSTORE_LOCATION
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.secrets.keystore.name }}
                  key: {{ $.Values.global.secrets.keystore.path }}
                  optional: false
            - name: KEYSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.secrets.keystore.name }}
                  key: {{ $.Values.global.secrets.keystore.password }}
                  optional: false
            - name: TRUSTSTORE_LOCATION
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.secrets.truststore.name }}
                  key: {{ $.Values.global.secrets.truststore.path }}
                  optional: false
            - name: TRUSTSTORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ $.Values.global.secrets.truststore.name }}
                  key: {{ $.Values.global.secrets.truststore.password }}
                  optional: false
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.registry }}{{ .Values.configuration.image.repository }}:{{ .Values.configuration.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.configuration.image.pullPolicy }}
          ports:
            - containerPort: 8888
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- include "common.volumeMount" .Values.global.volumes.pki | nindent 12 }}
            {{- include "common.volumeMount" .Values.global.volumes.config | nindent 12 }}
            - name: logs-dir
              mountPath: "{{- $cfg.Values.filebeat.logMountDirectory }}"
      - name: filebeat
        image: "{{ $cfg.Values.filebeat.imageRepo }}:{{ $cfg.Values.filebeat.imageTag }}"
        securityContext:
          {{- toYaml .Values.filebeat.securityContext | nindent 12 }}
        volumeMounts:
          - name: logs-dir
            mountPath: {{ $cfg.Values.filebeat.logMountDirectory }}
          - name: elk-config
            mountPath: /usr/share/filebeat/filebeat.yml
            subPath: filebeat.yml
          - name: filebeat-config
            mountPath: "/usr/share/filebeat/{{ $cfg.Values.filebeat.pipelineDestDir }}"
        env:
          - name: LOCAL_HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodName
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: LOGSTASH_HOST
            value: "{{ $cfg.Values.filebeat.logstashHost }}"
          - name: LOG_LOCATION_REGEX
            value: {{ printf "%s/%s" $cfg.Values.filebeat.logMountDirectory $cfg.Values.filebeat.logRegex }}
      {{ if $cfg.Values.logstash.enabled -}}
      - name: logstash
        image: "{{ $cfg.Values.logstash.imageRepo }}:{{ $cfg.Values.logstash.imageTag}} "
        securityContext:
          { { - toYaml .Values.filebeat.securityContext | nindent 12 } }
        volumeMounts:
          - name: elk-config
            mountPath: /usr/share/filebeat/logstash.yml
            subPath: logstash.yml
          - name: logstash-config
            mountPath: "/usr/share/logstash/{{ $cfg.Values.logstash.pipelineDestDir }}"
      volumes:
        {{- include "common.volume" $.Values.global.volumes.pki | nindent 8 }}
        {{- include "common.volume" $.Values.global.volumes.config | nindent 8 }}
        - name: logs-dir
          emptyDir: {}
        - name: elk-config
          configMap:
            name: {{ template "ingest.name" $cfg }}-elk
        - name: filebeat-config
          configMap:
            name: {{ template "ingest.name" $cfg }}-filebeat
        {{- if $cfg.Values.logstash.enabled }}
        - name: logstash-config
          configMap:
            name: { { template "ingest.name" $cfg } }-logstash
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}